{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setsortType","isReversed","setIsReverse","preparedGoods","goods","visibleGoods","ALPHABET","sort","productName1","productName2","localeCompare","LENGTH","product1","product2","length","reverse","getReorderedGoods","className","Box","sx","display","m","mt","mx","width","height","Paper","variant","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","Button","type","onClick","current","color","map","product","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,qFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAmCH,oBAAS,GAA5C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EApDD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKL,EAASY,SACZD,EAAaE,MAAK,SAACC,EAAcC,GAAf,OAChBD,EAAaE,cAAcD,MAE7B,MAEF,KAAKf,EAASiB,OACZN,EAAaE,MAAK,SAACK,EAAUC,GAAX,OAChBD,EAASE,OAASD,EAASC,UAI/B,KAAKpB,EAASI,MAShB,OAJIG,GACFI,EAAaU,UAGRV,EAyBLW,CAAkBrB,EAAiB,CAAEM,aAAYF,aAGnD,OACE,mCACE,qBAAKkB,UAAU,YAAf,SACE,cAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACT,kBAAmB,CACjBC,EAAG,EACHC,GAAI,GACJC,GAAI,OACJC,MAAO,IACPC,OAAQ,MARd,SAYE,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRR,GAAI,CACFS,gBAAiB,gBACjBR,QAAS,OACTS,WAAY,SACZC,eAAgB,QAChBC,SAAU,GACVC,WAAY,QARhB,SAWE,sBAAKf,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAACgB,EAAA,EAAD,CACEN,QAAQ,YACRO,KAAK,SACLjB,UAAWlB,IAAaL,EAASY,SAC7B,iBACA,0BACJ6B,QAnDO,WACrBnC,EAAYN,EAASY,WA4CT,iCAWA,cAAC2B,EAAA,EAAD,CACEN,QAAQ,YACRO,KAAK,SACLjB,UAAWlB,IAAaL,EAASiB,OAC7B,oBACA,6BACJwB,QA1DK,WACnBnC,EAAYN,EAASiB,SAmDT,4BAWA,cAACsB,EAAA,EAAD,CACEN,QAAQ,YACRO,KAAK,SACLjB,UAAWhB,EACP,oBACA,6BACJkC,QA7EK,WACnBjC,GAAa,SAAAkC,GAAO,OAAKA,MAsEb,sBAWErC,IAAaL,EAASI,MAAQG,IAE5B,cAACgC,EAAA,EAAD,CACEN,QAAQ,WACRU,MAAM,QACNH,KAAK,SACLjB,UAAU,mBACVkB,QA7EA,WAClBjC,GAAa,GACbF,EAAYN,EAASI,OAsEL,sBAWN,qBAAKmB,UAAU,OAAf,SACE,6BACGd,EAAcmC,KAAI,SAAAC,GAAO,OACxB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,sBCjK5CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.474ea016.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype Props = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: Props,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((productName1, productName2) => (\n        productName1.localeCompare(productName2)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((product1, product2) => (\n        product1.length - product2.length\n      ));\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setsortType] = useState(SortType.NONE);\n  const [isReversed, setIsReverse] = useState(false);\n\n  const goodsReverse = () => {\n    setIsReverse(current => !current);\n  };\n\n  const sortByAlphabet = () => {\n    setsortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setsortType(SortType.LENGTH);\n  };\n\n  const resetButton = () => {\n    setIsReverse(false);\n    setsortType(SortType.NONE);\n  };\n\n  const preparedGoods = (\n    getReorderedGoods(goodsFromServer, { isReversed, sortType })\n  );\n\n  return (\n    <>\n      <div className=\"container\">\n        <Box\n          sx={{\n            display: 'flex',\n            '& > :not(style)': {\n              m: 1,\n              mt: 30,\n              mx: 'auto',\n              width: 665,\n              height: 500,\n            },\n          }}\n        >\n          <Paper\n            variant=\"outlined\"\n            sx={{\n              backgroundColor: 'text.disabled',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'start',\n              fontSize: 24,\n              fontWeight: 'bold',\n            }}\n          >\n            <div className=\"section content\">\n              <div className=\"buttons\">\n                <Button\n                  variant=\"contained\"\n                  type=\"button\"\n                  className={sortType === SortType.ALPHABET\n                    ? 'button is-info'\n                    : 'button is-info is-light'}\n                  onClick={sortByAlphabet}\n                >\n                  Sort alphabetically\n                </Button>\n\n                <Button\n                  variant=\"contained\"\n                  type=\"button\"\n                  className={sortType === SortType.LENGTH\n                    ? 'button is-success'\n                    : 'button is-success is-light'}\n                  onClick={sortByLength}\n                >\n                  Sort by length\n                </Button>\n\n                <Button\n                  variant=\"contained\"\n                  type=\"button\"\n                  className={isReversed\n                    ? 'button is-warning'\n                    : 'button is-warning is-light'}\n                  onClick={goodsReverse}\n                >\n                  Reverse\n                </Button>\n\n                {(sortType !== SortType.NONE || isReversed)\n                  && (\n                    <Button\n                      variant=\"outlined\"\n                      color=\"error\"\n                      type=\"button\"\n                      className=\"button is-danger\"\n                      onClick={resetButton}\n                    >\n                      Reset\n                    </Button>\n                  )}\n              </div>\n              <div className=\"list\">\n                <ul>\n                  {preparedGoods.map(product => (\n                    <li data-cy=\"Good\" key={product}>\n                      {product}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </Paper>\n        </Box>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}